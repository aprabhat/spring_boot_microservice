services:
  mysql:
    image: mysql:8.0
    container_name: mysql-container
    environment:
      MYSQL_ROOT_PASSWORD: root_password
      MYSQL_DATABASE: ecommerce
      MYSQL_USER: user
      MYSQL_PASSWORD: password
    ports:
      - "3306:3306"
    command: --default-authentication-plugin=mysql_native_password  # Ensures compatibility with older clients
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - ecommerce-network

  inventory-service:
    image: inventory-service:latest
    container_name: inventory-service-container
    depends_on:
      - mysql
    environment:
      spring.datasource.url: jdbc:mysql://mysql:3306/ecommerce  # MySQL connection URL
      spring.datasource.username: user                          # Same as MYSQL_USER
      spring.datasource.password: password                      # Same as MYSQL_PASSWORD
    ports:
      - "8081:8081"  # Exposing Inventory Service on port 8081
    networks:
      - ecommerce-network
      
  order-service:
    image: order-service:latest
    container_name: order-service-container
    depends_on:
      - mysql
      - inventory-service
    environment:
      spring.datasource.url: jdbc:mysql://mysql:3306/ecommerce  # MySQL connection URL
      spring.datasource.username: user                          # Same as MYSQL_USER
      spring.datasource.password: password                      # Same as MYSQL_PASSWORD
      INVENTORY_SERVICE_URL: http://inventory-service:8081/api/inventory/items      # URL to call Inventory Service
    ports:
      - "8082:8082"  # Exposing Order Service on port 8082
    networks:
      - ecommerce-network
volumes:
  mysql-data:

networks:
  ecommerce-network:
    driver: bridge
    