plugins {
	id 'java'
	id 'org.springframework.boot' version '3.3.3'
	id 'io.spring.dependency-management' version '1.1.6'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(17)
	}
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-cache'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	//implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	//implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.h2database:h2'
	implementation 'com.mysql:mysql-connector-j:8.0.33'
	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-xml:2.17.2'
	implementation 'org.springframework.boot:spring-boot-starter-actuator:3.3.4'
	implementation 'io.zipkin.reporter2:zipkin-reporter-brave:3.4.2'
	implementation 'io.micrometer:micrometer-observation:1.13.6'
	implementation 'io.micrometer:micrometer-tracing-bridge-brave:1.3.4'
	implementation 'io.micrometer:micrometer-tracing:1.3.4'
	
	//implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client:4.1.3'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	//testImplementation 'org.springframework.security:spring-security-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar {
    archiveBaseName.set('inventory-service')  // Custom base name
    archiveVersion.set('')                      // Custom version (optional)
    archiveClassifier.set('')                        // Classifier, empty to avoid '-plain' or other suffixes
}