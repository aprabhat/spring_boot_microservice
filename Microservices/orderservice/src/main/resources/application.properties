spring.application.name=orderservice
server.port=9092

#spring data JPA configuration
spring.jpa.hibernate.ddl-auto=create
spring.datasource.url=jdbc:h2:mem:orderdb
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
spring.datasource.driverClassName=org.h2.Driver
spring.jpa.show-sql: true
spring.h2.console.enabled=true

spring.profiles.active=mysql

# RabbitMQ settings
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

management.endpoints.web.exposure.include=*
management.endpoint.health.show-details=always

#management.health.rabbit.enabled=false

#resilience4j.circuitbreaker.instances.orderservice.registerHealthIndicator=true
#resilience4j.circuitbreaker.instances.orderservice.failureRateThreshold=50
#resilience4j.circuitbreaker.instances.orderservice.minimumNumberOfCalls=5
#resilience4j.circuitbreaker.instances.orderservice.automaticTransitionFromOpenToHalfOpenEnabled=true
#resilience4j.circuitbreaker.instances.orderservice.waitDurationInOpenState=5s
#resilience4j.circuitbreaker.instances.orderservice.permittedNumberOfCallsInHalfOpenState=3
#resilience4j.circuitbreaker.instances.orderservice.slidingWindowSize=10
#resilience4j.circuitbreaker.instances.orderservice.slidingWindowType=COUNT_BASED
management.tracing.sampling.probability=1.0
logging.pattern.correlation=[${spring.application.name:},%X{traceId:-},%X{spanId:-}]
logging.include-application-name=false